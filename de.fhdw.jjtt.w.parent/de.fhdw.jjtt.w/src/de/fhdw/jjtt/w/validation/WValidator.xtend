/*
 * generated by Xtext 2.13.0
 */
package de.fhdw.jjtt.w.validation

import de.fhdw.jjtt.w.w.File
import de.fhdw.jjtt.w.w.Reference
import de.fhdw.jjtt.w.w.WPackage
import org.eclipse.xtext.validation.Check

import static extension org.eclipse.xtext.EcoreUtil2.*
import de.fhdw.jjtt.w.w.NamedProgram

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class WValidator extends AbstractWValidator {

	public static val DEAD_REFERENCE_NAME = 'deadReferenceName'

	public static val DEAD_REFERENCE_PARAMS = 'deadReferenceParams'

	public static val PARAMS_OUTPUTS_NOT_ALLOWED = 'paramsAndOutputsNotAllowedTogether'

	public static val PARAMS_PRINT_NOT_ALLOWED = 'paramsAndPrintNotAllowedTogether'

	public static val LOWER_CASE_NAME = 'nameShouldStartWithLowercase'

	@Check
	def checkDeadEnd(Reference r) {
		val matchingPrograms = r.getContainerOfType(File).programs.filter[it.name == r.name]
		if (matchingPrograms.empty)
			error('''Kein Programm namens «r.name» gefunden''', WPackage.Literals.REFERENCE__NAME, DEAD_REFERENCE_NAME)
		else if (!matchingPrograms.exists[r.params.size == it.params.size]) {
			error('''Die Parameter von «r.name»(«r.params») stimmen nicht mit denen des Programms «r.name» überein''',
				WPackage.Literals.REFERENCE__PARAMS, DEAD_REFERENCE_PARAMS)
		}
	}

	@Check
	def ckeckAssertionsOnlyInParamFreeOperations(NamedProgram p) {
		if (!p.params.empty && !p.outputs.empty) {
			error('''Ein parametrisiertes Programm darf keine Outputs oder Assertions haben!''',
				WPackage.Literals.NAMED_PROGRAM__OUTPUTS, PARAMS_OUTPUTS_NOT_ALLOWED)
		}
	}

	@Check
	def checkPrintOnlyInParamFreeOperations(NamedProgram p) {
		if (p.print && !p.params.empty) {
			warning('''Ein parametrisiertes Programm kann nicht mit Ausgabe simuliert werden, da es nicht simuliert werden kann!''',
				WPackage.Literals.NAMED_PROGRAM__PRINT, PARAMS_PRINT_NOT_ALLOWED)
		}
	}

	@Check
	def checkLowerCaseStart(NamedProgram p) {
		if (Character.isUpperCase(p.name.charAt(0)))
			warning('''Ein Programmname sollte mit einem Kleinbuchstaben anfangen!''',
				WPackage.Literals.NAMED_PROGRAM__NAME, LOWER_CASE_NAME)
	}

}
