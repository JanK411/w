/**
 * generated by Xtext 2.12.0
 */
package de.fhdw.jjtt.w.w.impl;

import de.fhdw.jjtt.w.w.Program;
import de.fhdw.jjtt.w.w.Sequence;
import de.fhdw.jjtt.w.w.WPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sequence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.fhdw.jjtt.w.w.impl.SequenceImpl#getP1 <em>P1</em>}</li>
 *   <li>{@link de.fhdw.jjtt.w.w.impl.SequenceImpl#getP2 <em>P2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SequenceImpl extends ProgramImpl implements Sequence
{
  /**
   * The cached value of the '{@link #getP1() <em>P1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP1()
   * @generated
   * @ordered
   */
  protected Program p1;

  /**
   * The cached value of the '{@link #getP2() <em>P2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP2()
   * @generated
   * @ordered
   */
  protected Program p2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SequenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WPackage.Literals.SEQUENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Program getP1()
  {
    return p1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetP1(Program newP1, NotificationChain msgs)
  {
    Program oldP1 = p1;
    p1 = newP1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WPackage.SEQUENCE__P1, oldP1, newP1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setP1(Program newP1)
  {
    if (newP1 != p1)
    {
      NotificationChain msgs = null;
      if (p1 != null)
        msgs = ((InternalEObject)p1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WPackage.SEQUENCE__P1, null, msgs);
      if (newP1 != null)
        msgs = ((InternalEObject)newP1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WPackage.SEQUENCE__P1, null, msgs);
      msgs = basicSetP1(newP1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WPackage.SEQUENCE__P1, newP1, newP1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Program getP2()
  {
    return p2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetP2(Program newP2, NotificationChain msgs)
  {
    Program oldP2 = p2;
    p2 = newP2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WPackage.SEQUENCE__P2, oldP2, newP2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setP2(Program newP2)
  {
    if (newP2 != p2)
    {
      NotificationChain msgs = null;
      if (p2 != null)
        msgs = ((InternalEObject)p2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WPackage.SEQUENCE__P2, null, msgs);
      if (newP2 != null)
        msgs = ((InternalEObject)newP2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WPackage.SEQUENCE__P2, null, msgs);
      msgs = basicSetP2(newP2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WPackage.SEQUENCE__P2, newP2, newP2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WPackage.SEQUENCE__P1:
        return basicSetP1(null, msgs);
      case WPackage.SEQUENCE__P2:
        return basicSetP2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WPackage.SEQUENCE__P1:
        return getP1();
      case WPackage.SEQUENCE__P2:
        return getP2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WPackage.SEQUENCE__P1:
        setP1((Program)newValue);
        return;
      case WPackage.SEQUENCE__P2:
        setP2((Program)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WPackage.SEQUENCE__P1:
        setP1((Program)null);
        return;
      case WPackage.SEQUENCE__P2:
        setP2((Program)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WPackage.SEQUENCE__P1:
        return p1 != null;
      case WPackage.SEQUENCE__P2:
        return p2 != null;
    }
    return super.eIsSet(featureID);
  }

} //SequenceImpl
